name: Static Analysis

on:
  workflow_call:
    secrets:
      API_KEY:
        required: true

env:
  JAVA_VERSION: 17
  GRADLE_VERSION: 8.8

permissions:
  pull-requests: write
  contents: read
  checks: write

jobs:
  analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}  # Read-only cache for PR builds

      - name: Prepare Environment
        run: |
          chmod +x ./gradlew
          echo "API_KEY=${{ secrets.API_KEY }}" > local.properties

      - name: Run Parallel Tasks
        run: |
          ./gradlew --parallel --configure-on-demand \
            build \
            app:lintDebug \
            testDebugUnitTest \
            detekt

      - name: Setup Reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Run Reviewdog for Lint and Detekt
        if: always()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Lint results
          find . -regex '^.*/build/reports/lint-results.*\.sarif$' -type f | while read file_path; do
            reviewdog -f=sarif -reporter=github-pr-review -name="android-lint" < "$file_path"
          done
          
          # Detekt results
          if [ -f "./build/reports/detekt.sarif" ]; then
            reviewdog -f=sarif -name="detekt" -reporter="github-pr-review" < ./build/reports/detekt.sarif
          fi

      - name: Publish Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: "JUnit Test Report"
          path: '**/build/test-results/*/TEST-*.xml'
          reporter: 'java-junit'
          fail-on-error: false